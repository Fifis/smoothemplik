// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// kernelWeightsOneCPP
arma::mat kernelWeightsOneCPP(arma::vec x, arma::vec xgrid, double bw, std::string kernel);
RcppExport SEXP _smoothemplik_kernelWeightsOneCPP(SEXP xSEXP, SEXP xgridSEXP, SEXP bwSEXP, SEXP kernelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xgrid(xgridSEXP);
    Rcpp::traits::input_parameter< double >::type bw(bwSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    rcpp_result_gen = Rcpp::wrap(kernelWeightsOneCPP(x, xgrid, bw, kernel));
    return rcpp_result_gen;
END_RCPP
}
// kernelWeightsCPP
arma::mat kernelWeightsCPP(arma::mat x, arma::mat xgrid, arma::vec bw, std::string kernel);
RcppExport SEXP _smoothemplik_kernelWeightsCPP(SEXP xSEXP, SEXP xgridSEXP, SEXP bwSEXP, SEXP kernelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xgrid(xgridSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bw(bwSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    rcpp_result_gen = Rcpp::wrap(kernelWeightsCPP(x, xgrid, bw, kernel));
    return rcpp_result_gen;
END_RCPP
}
// kernelDensityCPP
Rcpp::NumericVector kernelDensityCPP(arma::mat x, arma::mat xgrid, arma::vec bw, std::string kernel);
RcppExport SEXP _smoothemplik_kernelDensityCPP(SEXP xSEXP, SEXP xgridSEXP, SEXP bwSEXP, SEXP kernelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xgrid(xgridSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bw(bwSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    rcpp_result_gen = Rcpp::wrap(kernelDensityCPP(x, xgrid, bw, kernel));
    return rcpp_result_gen;
END_RCPP
}
// kernelSmoothCPP
Rcpp::NumericVector kernelSmoothCPP(arma::mat x, arma::vec y, arma::mat xgrid, arma::vec bw, std::string kernel, bool LOO);
RcppExport SEXP _smoothemplik_kernelSmoothCPP(SEXP xSEXP, SEXP ySEXP, SEXP xgridSEXP, SEXP bwSEXP, SEXP kernelSEXP, SEXP LOOSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::mat >::type xgrid(xgridSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bw(bwSEXP);
    Rcpp::traits::input_parameter< std::string >::type kernel(kernelSEXP);
    Rcpp::traits::input_parameter< bool >::type LOO(LOOSEXP);
    rcpp_result_gen = Rcpp::wrap(kernelSmoothCPP(x, y, xgrid, bw, kernel, LOO));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_smoothemplik_kernelWeightsOneCPP", (DL_FUNC) &_smoothemplik_kernelWeightsOneCPP, 4},
    {"_smoothemplik_kernelWeightsCPP", (DL_FUNC) &_smoothemplik_kernelWeightsCPP, 4},
    {"_smoothemplik_kernelDensityCPP", (DL_FUNC) &_smoothemplik_kernelDensityCPP, 4},
    {"_smoothemplik_kernelSmoothCPP", (DL_FUNC) &_smoothemplik_kernelSmoothCPP, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_smoothemplik(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
