% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elfunctions.R
\name{weightedEuL}
\alias{weightedEuL}
\title{Euclidean likelihood for vectors of arbitrary dimensions}
\usage{
weightedEuL(
  z,
  mu = NULL,
  ct = NULL,
  shift = NULL,
  SEL = TRUE,
  n.orig = NULL,
  weight.tolerance = NULL,
  trunc.to = 0,
  return.weights = FALSE,
  verbose = FALSE,
  chull.diag = FALSE
)
}
\arguments{
\item{z}{Numeric data vector.}

\item{mu}{Hypothesized mean of \code{z} in the moment condition.}

\item{ct}{Numeric count variable with positive values that indicates the multiplicity of observations.
Can be fractional. Very small counts below the threshold \code{weight.tolerance} are zeroed.}

\item{shift}{The value to add in the denominator (useful in case there are extra Lagrange multipliers): 1 + lambda'Z + shift.}

\item{SEL}{If \code{FALSE}, then the boundaries for the lambda search are based on the total sum of counts, like in vanilla empirical likelihood,
due to formula (2.9) in \insertCite{owen2001empirical}{smoothemplik}, otherwise according to Cosma et al. (2019, p. 170, the topmost formula).}

\item{n.orig}{An optional scalar to denote the original sample size (useful in the rare cases re-normalisation is needed).}

\item{weight.tolerance}{Weight tolerance for counts to improve numerical stability
(similar to the ones in Art B. Owen's 2017 code, but adapting to the sample size).}

\item{trunc.to}{Counts under \code{weight.tolerance} will be set to this value.
In most cases, setting this to \code{0} or \code{weight.tolerance} is a viable solution of the zero-denominator problem.}

\item{return.weights}{Logical: if TRUE, individual EL weights are computed and returned.
Setting this to FALSE gives huge memory savings in large data sets, especially when smoothing is used.}

\item{verbose}{Logical: if \code{TRUE}, prints warnings.}

\item{chull.diag}{Logical: if \code{TRUE}, checks if there is a definite convex hull failure
in at least one dimension (\code{mu} being smaller than the smallest or larger
than the largest element). Note that it does not check if \code{mu} is strictly in the
convex hull because this procedure is much slower and is probably unnecessary.}
}
\value{
A list with the same structure as that in [weightedEL()].
}
\description{
Euclidean likelihood for vectors of arbitrary dimensions
}
\examples{
set.seed(1)
z <- cbind(rnorm(10), runif(10))
colMeans(z)
a <- weightedEuL(z, return.weights = TRUE)
a$wts
sum(a$wts)  # Unity
colSums(a$wts * z)  # Zero
}
\seealso{
[weightedEL()]
}
